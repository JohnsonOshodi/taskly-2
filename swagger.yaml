openapi: 3.0.3
info:
  title: Taskly API
  description: Taskly is a robust task management system designed to streamline project management and team collaboration. Featuring real-time updates, automated reminders, and comprehensive reporting, Taskly ensures seamless task tracking and efficient workflow management, empowering teams to stay organized and productive.
  version: "2.0"
paths:
  /api/auth/register:
    post:
      summary: Register a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                organization:
                  type: string
      responses:
        "201":
          description: User registered
        "400":
          description: Bad request

  /api/auth/login:
    post:
      summary: Login a user
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: User logged in
        "401":
          description: Unauthorized

  /api/organizations:
    post:
      summary: Create an organization
      tags:
        - Organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Name of the organization
                description:
                  type: string
                  description: Description of the organization
      responses:
        "201":
          description: Organization created successfully
        "401":
          description: Unauthorized
        "404":
          description: Organization not found
        "400":
          description: Bad request

  /api/{organizationId}/addUser:
    post:
      summary: Add a user to an organization
      tags:
        - Organization
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: The ID of the organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user to be added to the organization
      responses:
        "201":
          description: User added to an organization
        "401":
          description: Unauthorized
        "404":
          description: User not found
        "400":
          description: Bad request

  /api/board:
    post:
      summary: Create a board
      tags:
        - Board
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Board name
                description:
                  type: string
                  description: Description of the board
      responses:
        "201":
          description: Board created successfully
        "401":
          description: Unauthorized
        "404":
          description: Board not found
        "400":
          description: Bad request

  /organizations/{organizationId}/boards:
    get:
      summary: Get all boards for an organization
      tags:
        - Boards
      parameters:
        - in: path
          name: organizationId
          required: true
          schema:
            type: string
          description: The ID of the organization
      responses:
        "200":
          description: A list of boards for the organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                        organization:
                          type: string
                        members:
                          type: array
                          items:
                            type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"

  /api/board/{id}:
    get:
      summary: Get a single board by ID
      tags:
        - Board
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the board to retrieve
      responses:
        "200":
          description: A single board object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      organization:
                        type: string
                      members:
                        type: array
                        items:
                          type: string
        "404":
          description: Board not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Board not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"

  /boards/{id}:
    put:
      summary: Update a board
      tags:
        - Board
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the board to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Updated name of the board
                description:
                  type: string
                  description: Updated description of the board
                members:
                  type: array
                  items:
                    type: string
                  description: Updated list of members for the board
      responses:
        "200":
          description: Board updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      organization:
                        type: string
                      members:
                        type: array
                        items:
                          type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Validation failed or malformed request"
        "404":
          description: Board not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Board not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"

  /board/{id}:
    delete:
      summary: Delete a board
      tags:
        - Board
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the board to delete
      responses:
        "200":
          description: Board deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    example: {}
        "404":
          description: Board not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Board not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"
                    
  /boards/{boardId}/tasks:
    post:
      summary: Create a new task
      tags:
        - Tasks
      parameters:
        - in: path
          name: boardId
          required: true
          schema:
            type: string
          description: The ID of the board to which the task belongs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the task
                  example: "Design homepage"
                description:
                  type: string
                  description: A detailed description of the task
                  example: "Create the initial design for the homepage"
                dueDate:
                  type: string
                  format: date
                  description: The due date for the task
                  example: "2024-08-20"
      responses:
        "201":
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      dueDate:
                        type: string
                        format: date
                      boardId:
                        type: string
                      user:
                        type: string
        "400":
          description: Bad request (e.g., invalid board ID)
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Invalid board ID or other validation error"
        "404":
          description: Board not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Board not found"
                    
  /gettaskboards/{boardId}/tasks:
    get:
      summary: Get all tasks for a board
      tags:
        - Tasks
      parameters:
        - in: path
          name: boardId
          required: true
          schema:
            type: string
          description: The ID of the board whose tasks are being retrieved
      responses:
        "200":
          description: A list of tasks for the board
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        description:
                          type: string
                        dueDate:
                          type: string
                          format: date
                        boardId:
                          type: string
                        user:
                          type: string
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"
                    
  
  get:
      summary: Get a single task by ID
      tags:
        - Tasks
      parameters:
      - in: path
        name: id
        required: true
        schema:
            type: string
        description: The ID of the task to retrieve
      responses:
        "200":
          description: A single task object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      dueDate:
                        type: string
                        format: date
                      boardId:
                        type: string
                      user:
                        type: string
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Task not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"
                    
  /tasks/{id}/update:
    put:
      summary: Update a task
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the task to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: Updated title of the task
                description:
                  type: string
                  description: Updated description of the task
                dueDate:
                  type: string
                  format: date
                  description: Updated due date of the task
                boardId:
                  type: string
                  description: Updated ID of the board to which the task belongs
                user:
                  type: string
                  description: Updated ID of the user assigned to the task
      responses:
        "200":
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      dueDate:
                        type: string
                        format: date
                      boardId:
                        type: string
                      user:
                        type: string
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Validation failed or malformed request"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Task not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                    error:
                     type: string
                     example: "Internal server error"

  /tasks/{id}/delete:
    delete:
      summary: Delete a task
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the task to delete
      responses:
        "200":
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    example: {}
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Task not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"
                    
  /tasks/{id}/assign:
    put:
      summary: Assign a task to a user
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the task to assign
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user to assign the task to
      responses:
        "200":
          description: Task assigned successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      dueDate:
                        type: string
                        format: date-time
                      assignedTo:
                        type: string
                      boardId:
                        type: string
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Task not found"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Validation failed or malformed request"
                    
  paths:
  /tasks/{id}/comments:
    post:
      summary: Add a comment to a task
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the task to add a comment to
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: The text of the comment
      responses:
        "200":
          description: Comment added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      description:
                        type: string
                      dueDate:
                        type: string
                        format: date-time
                      comments:
                        type: array
                        items:
                          type: object
                          properties:
                            text:
                              type: string
                            user:
                              type: string
                      assignedTo:
                        type: string
                      boardId:
                        type: string
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Task not found"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Validation failed or malformed request"
                    
                    
  /tasks/{id}/getcomments:
    get:
      summary: Get all comments for a task
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the task to retrieve comments for
      responses:
        "200":
          description: Successfully retrieved comments for the task
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        text:
                          type: string
                          description: The text of the comment
                        user:
                          type: string
                          description: The ID of the user who made the comment
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Task not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"
                    
                
  /tasks/{id}/attachments:
    post:
      summary: Upload an attachment to a task
      tags:
        - Tasks
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the task to which the attachment will be added
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: The URL of the attachment
                fileType:
                  type: string
                  description: The type of the file (e.g., 'image/jpeg', 'application/pdf')
      responses:
        "200":
          description: Successfully uploaded attachment to the task
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                      name:
                        type: string
                      organization:
                        type: string
                      attachments:
                        type: array
                        items:
                          type: object
                          properties:
                            url:
                              type: string
                              description: The URL of the attachment
                            fileType:
                              type: string
                              description: The type of the file
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Invalid request data or file type"
        "404":
          description: Task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Task not found"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  error:
                    type: string
                    example: "Internal server error"
   